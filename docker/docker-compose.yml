version: '3'
services:
  roscore_gazebo:
    privileged: true
    hostname: roscore
    build: ros
    environment:
      DISPLAY: $DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./ros-files:/root/persistent-files
    command: bash -c "roslaunch /root/persistent-files/core_gazebo.launch"
   #command: xterm -fa Monospace -fs 10 -bg blue -fg white -e "roslaunch /root/persistent-files/core.launch"

  roscore_hardware:
    privileged: true
    hostname: roscore
    build: ros
    environment:
      DISPLAY: $DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./ros-files:/root/persistent-files
    command: bash -c "roslaunch /root/persistent-files/core_hardware.launch"
   #command: xterm -fa Monospace -fs 10 -bg blue -fg white -e "roslaunch /root/persistent-files/core.launch"

  rosconsole:
    privileged: true
    hostname: rosconsole
    build: ros
    environment:
      ROS_MASTER_URI: "http://roscore:11311"
      DISPLAY: ${DISPLAY}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./ros-files:/root/persistent-files
    command: xterm -fa Monospace -fs 10 -bg black -fg green

  gmapping:
    privileged: true
    hostname: gmapping
    build: ros
    environment:
      ROS_MASTER_URI: "http://roscore:11311"
      DISPLAY: ${DISPLAY}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    command: bash -c 'rosrun gmapping slam_gmapping scan:=/scanbot/scan _map_update_interval:=0.1 _maxUrange:=5.0 _kernel_size:=2 _delta:=0.1 output="screen"'
   #command: xterm -fa Monospace -fs 10 -bg brown -fg orange -e 'rosrun gmapping slam_gmapping scan:=/scanbot/scan _map_update_interval:=0.1 _maxUrange:=5.0 _kernel_size:=2 _delta:=0.05 output="screen"'

  rviz:
    privileged: true
    hostname: rviz
    build: ros
    environment:
      ROS_MASTER_URI: "http://roscore:11311"
      DISPLAY: ${DISPLAY}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./ros-files:/root/persistent-files
    command: bash -c "rosrun rviz rviz -f odom -d /root/persistent-files/rviz-config.rviz"
   #command: xterm -fa Monospace -fs 10 -bg yellow -fg slateblue1 -e "rosrun rviz rviz -f odom -d /root/persistent-files/rviz-config.rviz"

  gazebo:
    privileged: true
    build: ros
    environment:
      ROS_MASTER_URI: "http://roscore:11311"
      DISPLAY: ${DISPLAY}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./gazebo-files/worlds:/root/worlds
      - ./gazebo-files/models:/root/.gazebo/models
      - ./gazebo-files/gui.ini:/root/.gazebo/gui.ini
    command: bash -c "rosrun gazebo_ros gazebo --verbose /root/worlds/apartment/apartment.world"
   #command: xterm -fa Monospace -fs 10 -bg black -fg slateblue1 -e "rosrun gazebo_ros gazebo --verbose /root/worlds/apartment/apartment.world"

  gamepad:
    privileged: true
    build: ros
    environment:
      ROS_MASTER_URI: "http://roscore:11311"
      DISPLAY: ${DISPLAY}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./ros-files:/root/persistent-files
    command: xterm -fa Monospace -fs 10 -bg black -fg orange -e "rosrun joy joy_node _autorepeat_rate:=10"
   #command: bash -c "rosrun joy joy_node _autorepeat_rate:=10"

  gamepad_conv:
    privileged: true
    build: ros
    environment:
      ROS_MASTER_URI: "http://roscore:11311"
      DISPLAY: ${DISPLAY}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./ros-files:/root/persistent-files
    command: xterm -fa Monospace -fs 10 -bg black -fg purple -e "rosrun teleop_twist_joy teleop_node cmd_vel:=/scanbot/scanbot_base_controller/cmd_vel _axis_linear:=1 _axis_angular:=3 _scale_linear:=0.1 _scale_angular:=1.5 _enable_button:=5 _enable_turbo_button:=4 _scale_linear_turbo:=0.5 _scale_angular_turbo:=7.5"
   #command: bash -c "rosrun teleop_twist_joy teleop_node cmd_vel:=/scanbot/scanbot_base_controller/cmd_vel _axis_linear:=1 _axis_angular:=3 _scale_linear:=-0.1 _scale_angular:=0.2 _enable_button:=5 _enable_turbo_button:=4 _scale_linear_turbo:=-1 _scale_angular_turbo:=2"

  scanbot_hwiface:
    privileged: true
    build: ros
    environment:
      ROS_MASTER_URI: "http://roscore:11311"
      DISPLAY: ${DISPLAY}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      QT_X11_NO_MITSHM: 1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./ros-files:/root/persistent-files
    command: xterm -fa Monospace -fs 10 -bg white -fg blue -e "source /root/catkin_ws/devel/setup.bash && env ROS_NAMESPACE=/scanbot rosrun scanbot_hwiface scanbot_hwiface /dev/ttyUSB0 /scanbot/scan"
   #command: bash -c "rosrun scanbot_hwiface scanbot_hwiface /dev/ttyUSB0"

networks:
  default:
    external:
      name: scanbot-network
